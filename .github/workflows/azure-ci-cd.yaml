name: CI/CD for FastAPI to Azure Web App

env:
  ACR_NAME: "youracrname" # <--- CHANGE THIS to your Azure Container Registry name
  RESOURCE_GROUP: "glowguideResourceGroup"
  APP_NAME: "glowguide-backend-7514"
  IMAGE_NAME: "glowguidefastapi"

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # =================================================================
      # NEW SAFE DEBUGGING STEP
      # This step checks if the secret is available without printing it.
      # =================================================================
      - name: Verify that the Azure credentials secret is set
        run: |
          if [ -z "${{ secrets.AZURE_CREDENTIALS }}" ]; then
            echo "::error::AZURE_CREDENTIALS secret is not set. Please add it to your repository settings."
            exit 1
          else
            echo "AZURE_CREDENTIALS secret is present. Proceeding with login."
          fi

      # =================================================================
      # CORRECT LOGIN STEP
      # This uses the single, secure JSON credential.
      # =================================================================
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # =================================================================
      # CORRECT ACR LOGIN STEP
      # This uses the token from the successful Azure Login. No passwords needed!
      # =================================================================
      - name: Azure Container Registry Login
        uses: azure/docker-login@v1
        with:
          login-server: ${{ env.ACR_NAME }}.azurecr.io

      - name: Build and Push Docker image
        run: |
          docker build . -t ${{ env.ACR_NAME }}.azurecr.io/${{ env.IMAGE_NAME }}:${{ github.sha }}
          docker push ${{ env.ACR_NAME }}.azurecr.io/${{ env.IMAGE_NAME }}:${{ github.sha }}

      # =================================================================
      # CORRECT DEPLOYMENT STEP
      # Using the dedicated and simpler webapps-deploy action.
      # =================================================================
      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.APP_NAME }}
          images: "${{ env.ACR_NAME }}.azurecr.io/${{ env.IMAGE_NAME }}:${{ github.sha }}"

      - name: Set Web App settings
        uses: azure/cli@v1
        with:
          inlineScript: |
            az webapp config appsettings set --resource-group ${{ env.RESOURCE_GROUP }} --name ${{ env.APP_NAME }} --settings WEBSITES_PORT=8000
